@page "/pokemon/{PokemonId}"
@using Util
@using Models
@inject PokeClient client
@inject NavigationManager navigation


<div class="row">
    <a href="/" class="btn btn-primary ">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
        <span>Voltar</span>
    </svg>
    </a>
</div>
<div class="container">
    
    <div class="card">
        @if(@pokemon.types.Count > 0)
        {
            <div class="card-top" style="background-color: @PokeColor.GetTypeColor(@pokemon.types[0].type.name) ;">
                <img src="@pokemon.sprites.other.dream_world.front_default" alt="pokemon sprite" class="card-img-top">
            </div>
        }
        <div class="inner-container">
            <div class="stats-head">
                <div class="icon-container">
                    <img src="/img/@PokeUtil.GetRandomBall()" alt="" class="poke-icon">
                    <h1 class="pokemon-name card-title">@pokemon.name</h1>
                </div>
                <div class="pokemon-info">
                    <h5>Height: @PokeUtil.GetPokemonHeightInMeters(@pokemon.height)m</h5>
                    <div>
                        @foreach(var type in pokemon.types)
                        {
                            <span class="type-badge" style="background-color: @PokeColor.GetTypeColor(@type.type.name);">@type.type.name</span>
                        }
                    </div>
                    <h5>Weight: @PokeUtil.GetPokemonWeightInKilogramas(@pokemon.weight)kg</h5>
                </div>
            </div>
        </div>
        <div class="stats-head">
            <div class="icon-container">
                <img src="/img/golden-badge.png" alt="golden badge" class="badge-img">
                <h2>Stats</h2>
            </div>
            @foreach(var stat in pokemon.stats)
            {
                <div class="stat-body">
                    <h5 class="stat">@stat.stat.name: @stat.base_stat</h5>
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped" 
                        role="progressbar" 
                        style="width: @stat.base_stat%; background-color: @PokeColor.GetStatColor(@stat.stat.name) ;"
                        aria-valuenow="100" aria-valuemin="0" aria-valuemax="200">

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code{

    [Parameter]
    public string PokemonId{ get; set; }
    Pokemon pokemon = new Pokemon();

    protected async override Task OnInitializedAsync(){

        pokemon = await client.GetPokemon(PokemonId);

    }
}